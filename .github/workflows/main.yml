name: CI - Build, Scan e Push da Imagem Docker

on:
  push:
    branches:
      - main # Aciona o pipeline em pushs para a branch principal

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/php-hello-app
  DOCKER_TAG: ${{ github.sha }} # Usaremos o SHA do commit como tag para garantir unicidade

jobs:
  build_and_scan:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout do Código
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      # 2. Login no Docker Hub
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Setup do Buildx (Melhora a performance do build)
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Construir a imagem Docker
      # Note o uso de 'load' para que a imagem fique disponível localmente para o scanner.
      - name: Construir Imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false # Não faz o push ainda
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          load: true # Carrega a imagem localmente para o próximo passo

      # 5. Análise de Vulnerabilidades (Usando Trivy - ferramenta popular e gratuita)
      - name: Instalar Trivy
        uses: aquasecurity/trivy-action/setup@v0
        with:
          version: 'latest'
      
      - name: Scan da Imagem com Trivy
        uses: aquasecurity/trivy-action@v0
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          format: 'table'
          exit-code: '1' # Falha o CI se encontrar vulnerabilidades críticas
          severity: 'CRITICAL,HIGH'

      # 6. Fazer o Push da Imagem (Somente se o scan passar)
      - name: Fazer Push da Imagem para o Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true # Agora faz o push
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_IMAGE }}:latest # Também faz o push com a tag 'latest'